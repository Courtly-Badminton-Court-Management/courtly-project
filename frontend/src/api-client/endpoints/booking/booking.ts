/**
 * Generated by orval v7.12.2 🍺
 * Do not edit manually.
 * Your Project API
 * Your project description
 * OpenAPI spec version: 1.0.0
 */
import { useMutation } from "@tanstack/react-query";
import type {
  MutationFunction,
  QueryClient,
  UseMutationOptions,
  UseMutationResult,
} from "@tanstack/react-query";

import { customRequest } from "../../custom-client";

/**
 * Create a new booking.

Endpoint:
  POST /api/booking/
 */
export const bookingCreate = (signal?: AbortSignal) => {
  return customRequest<void>({ url: `/api/booking/`, method: "POST", signal });
};

export const getBookingCreateMutationOptions = <
  TError = unknown,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof bookingCreate>>,
    TError,
    void,
    TContext
  >;
}): UseMutationOptions<
  Awaited<ReturnType<typeof bookingCreate>>,
  TError,
  void,
  TContext
> => {
  const mutationKey = ["bookingCreate"];
  const { mutation: mutationOptions } = options
    ? options.mutation &&
      "mutationKey" in options.mutation &&
      options.mutation.mutationKey
      ? options
      : { ...options, mutation: { ...options.mutation, mutationKey } }
    : { mutation: { mutationKey } };

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof bookingCreate>>,
    void
  > = () => {
    return bookingCreate();
  };

  return { mutationFn, ...mutationOptions };
};

export type BookingCreateMutationResult = NonNullable<
  Awaited<ReturnType<typeof bookingCreate>>
>;

export type BookingCreateMutationError = unknown;

export const useBookingCreate = <TError = unknown, TContext = unknown>(
  options?: {
    mutation?: UseMutationOptions<
      Awaited<ReturnType<typeof bookingCreate>>,
      TError,
      void,
      TContext
    >;
  },
  queryClient?: QueryClient,
): UseMutationResult<
  Awaited<ReturnType<typeof bookingCreate>>,
  TError,
  void,
  TContext
> => {
  const mutationOptions = getBookingCreateMutationOptions(options);

  return useMutation(mutationOptions, queryClient);
};
