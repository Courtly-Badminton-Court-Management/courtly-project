{"openapi":"3.0.3","info":{"title":"Your Project API","version":"1.0.0","description":"Your project description"},"paths":{"/api/auth/auth/login/":{"post":{"operationId":"auth_auth_login_create","description":"POST /api/auth/login/ with {username,password} or {email,password}\nReturns: {access, refresh, firstLogin, user}","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CourtlyTokenObtainPair"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/CourtlyTokenObtainPair"}},"multipart/form-data":{"schema":{"$ref":"#/components/schemas/CourtlyTokenObtainPair"}}},"required":true},"security":[{}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CourtlyTokenObtainPair"}}},"description":""}}}},"/api/auth/auth/register/":{"post":{"operationId":"auth_auth_register_create","description":"POST /api/auth/register/\nBody accepts: username, email, password, confirm, firstname, lastname, accept\n(serializer maps firstname/lastname -> first_name/last_name)","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Register"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Register"}},"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Register"}}},"required":true},"security":[{"cookieAuth":[]},{"jwtAuth":[]},{}],"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Register"}}},"description":""}}}},"/api/auth/auth/token/refresh/":{"post":{"operationId":"auth_auth_token_refresh_create","description":"Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenRefresh"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/TokenRefresh"}},"multipart/form-data":{"schema":{"$ref":"#/components/schemas/TokenRefresh"}}},"required":true},"security":[{}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenRefresh"}}},"description":""}}}},"/api/auth/coins/add":{"post":{"operationId":"auth_coins_add_create","tags":["auth"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"description":"No response body"}}}},"/api/auth/login/":{"post":{"operationId":"auth_login_create","description":"POST /api/auth/login/ with {username,password} or {email,password}\nReturns: {access, refresh, firstLogin, user}","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CourtlyTokenObtainPair"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/CourtlyTokenObtainPair"}},"multipart/form-data":{"schema":{"$ref":"#/components/schemas/CourtlyTokenObtainPair"}}},"required":true},"security":[{}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CourtlyTokenObtainPair"}}},"description":""}}}},"/api/auth/me":{"get":{"operationId":"auth_me_retrieve","tags":["auth"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"description":"No response body"}}},"patch":{"operationId":"auth_me_partial_update","tags":["auth"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"description":"No response body"}}}},"/api/auth/me/":{"get":{"operationId":"auth_me_retrieve_2","tags":["auth"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"description":"No response body"}}},"patch":{"operationId":"auth_me_partial_update_2","tags":["auth"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"description":"No response body"}}}},"/api/auth/register/":{"post":{"operationId":"auth_register_create","description":"POST /api/auth/register/\nBody accepts: username, email, password, confirm, firstname, lastname, accept\n(serializer maps firstname/lastname -> first_name/last_name)","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Register"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Register"}},"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Register"}}},"required":true},"security":[{"cookieAuth":[]},{"jwtAuth":[]},{}],"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Register"}}},"description":""}}}},"/api/auth/token/refresh/":{"post":{"operationId":"auth_token_refresh_create","description":"Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.","tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenRefresh"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/TokenRefresh"}},"multipart/form-data":{"schema":{"$ref":"#/components/schemas/TokenRefresh"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenRefresh"}}},"description":""}}}},"/api/booking/":{"post":{"operationId":"booking_create","description":"Create a new booking.\n\nEndpoint:\n  POST /api/booking/","tags":["booking"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"description":"No response body"}}}},"/api/bookings/":{"get":{"operationId":"bookings_retrieve","description":"List all recent bookings (for admin or manager view).\nEndpoint:\n    GET /api/bookings/","tags":["bookings"],"security":[{"cookieAuth":[]},{"jwtAuth":[]},{}],"responses":{"200":{"description":"No response body"}}}},"/api/bookings-admin/":{"get":{"operationId":"bookings_admin_list","description":"CRUD operations for Booking.\nSupports lookup by booking_no instead of primary key.","tags":["bookings-admin"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Booking"}}}},"description":""}}},"post":{"operationId":"bookings_admin_create","description":"CRUD operations for Booking.\nSupports lookup by booking_no instead of primary key.","tags":["bookings-admin"],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Booking"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Booking"}},"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Booking"}}},"required":true},"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Booking"}}},"description":""}}}},"/api/bookings-admin/{booking_no}/":{"get":{"operationId":"bookings_admin_retrieve","description":"CRUD operations for Booking.\nSupports lookup by booking_no instead of primary key.","parameters":[{"in":"path","name":"booking_no","schema":{"type":"string"},"required":true}],"tags":["bookings-admin"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Booking"}}},"description":""}}},"put":{"operationId":"bookings_admin_update","description":"CRUD operations for Booking.\nSupports lookup by booking_no instead of primary key.","parameters":[{"in":"path","name":"booking_no","schema":{"type":"string"},"required":true}],"tags":["bookings-admin"],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Booking"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Booking"}},"multipart/form-data":{"schema":{"$ref":"#/components/schemas/Booking"}}},"required":true},"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Booking"}}},"description":""}}},"patch":{"operationId":"bookings_admin_partial_update","description":"CRUD operations for Booking.\nSupports lookup by booking_no instead of primary key.","parameters":[{"in":"path","name":"booking_no","schema":{"type":"string"},"required":true}],"tags":["bookings-admin"],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PatchedBooking"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/PatchedBooking"}},"multipart/form-data":{"schema":{"$ref":"#/components/schemas/PatchedBooking"}}}},"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Booking"}}},"description":""}}},"delete":{"operationId":"bookings_admin_destroy","description":"CRUD operations for Booking.\nSupports lookup by booking_no instead of primary key.","parameters":[{"in":"path","name":"booking_no","schema":{"type":"string"},"required":true}],"tags":["bookings-admin"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"204":{"description":"No response body"}}}},"/api/bookings-admin/{booking_no}/cancel/":{"delete":{"operationId":"bookings_admin_cancel_destroy","description":"Cancel a booking by marking it as 'cancelled'.","parameters":[{"in":"path","name":"booking_no","schema":{"type":"string"},"required":true}],"tags":["bookings-admin"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"204":{"description":"No response body"}}}},"/api/bookings/{booking_no}/":{"get":{"operationId":"bookings_retrieve_2","description":"CRUD operations for Booking.\nSupports lookup by booking_no instead of primary key.","parameters":[{"in":"path","name":"booking_no","schema":{"type":"string"},"required":true}],"tags":["bookings"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Booking"}}},"description":""}}}},"/api/bookings/{booking_no}/cancel/":{"post":{"operationId":"bookings_cancel_create","description":"Cancel a booking using its booking_no.\n\nEndpoint:\n  POST /api/bookings/<booking_no>/cancel/","parameters":[{"in":"path","name":"booking_no","schema":{"type":"string"},"required":true}],"tags":["bookings"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"description":"No response body"}}}},"/api/my-booking/":{"get":{"operationId":"my_booking_retrieve","description":"List the last 50 bookings of the logged-in user.\nEndpoint:\n    GET /api/my-booking/","tags":["my-booking"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"description":"No response body"}}}},"/api/slots/":{"get":{"operationId":"slots_list","description":"ViewSet for viewing court slots.\n\nEndpoints:\n  • GET /api/slots/                     — List all slots\n  • GET /api/slots/month-view?club=1&month=YYYY-MM","tags":["slots"],"security":[{"cookieAuth":[]},{"jwtAuth":[]},{}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Slot"}}}},"description":""}}}},"/api/slots/{id}/":{"get":{"operationId":"slots_retrieve","description":"ViewSet for viewing court slots.\n\nEndpoints:\n  • GET /api/slots/                     — List all slots\n  • GET /api/slots/month-view?club=1&month=YYYY-MM","parameters":[{"in":"path","name":"id","schema":{"type":"integer"},"description":"A unique integer value identifying this slot.","required":true}],"tags":["slots"],"security":[{"cookieAuth":[]},{"jwtAuth":[]},{}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Slot"}}},"description":""}}}},"/api/slots/{slot_id}/set-status/{new_status}/":{"post":{"operationId":"slots_set_status_create","description":"Manually change a slot’s status (manager-only).\n\nEndpoint:\n  POST /api/slots/<slot_id>/set-status/<new_status>/","parameters":[{"in":"path","name":"new_status","schema":{"type":"string"},"required":true},{"in":"path","name":"slot_id","schema":{"type":"integer"},"required":true}],"tags":["slots"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"description":"No response body"}}}},"/api/slots/month-view/":{"get":{"operationId":"slots_month_view_retrieve","description":"Retrieve all slots for a given club and month.\nExample:\n    GET /api/slots/month-view?club=1&month=2025-09","tags":["slots"],"security":[{"cookieAuth":[]},{"jwtAuth":[]},{}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Slot"}}},"description":""}}}},"/api/wallet/balance/":{"get":{"operationId":"wallet_balance_retrieve","description":"GET /api/wallet/balance/  -> {\"balance\": <int>}\nUsed by the header chip showing current coins.","tags":["wallet"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"description":"No response body"}}}},"/api/wallet/ledger/":{"get":{"operationId":"wallet_ledger_list","description":"GET /api/wallet/ledger/ -> transaction history.\n- Players see their own rows.\n- Managers can see all, or filter by ?user=<id>.\nAlso exposes: GET /api/wallet/ledger/export-csv/ for the \"Export CSV\" button.","tags":["wallet"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CoinLedger"}}}},"description":""}}}},"/api/wallet/ledger/export-csv/":{"get":{"operationId":"wallet_ledger_export_csv_retrieve","description":"Exports the currently viewable transactions to CSV.\n(If manager passes ?user=<id> it exports that user's rows.)\nAdds BOM for proper UTF-8 display in Excel and includes username.","tags":["wallet"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CoinLedger"}}},"description":""}}}},"/api/wallet/topups/":{"get":{"operationId":"wallet_topups_list","description":"Top-up requests:\n- Player:\n    POST /api/wallet/topups/   -> create new top-up request (pending)\n    GET  /api/wallet/topups/   -> list own requests (pending/history)\n- Manager:\n    GET  /api/wallet/topups/   -> list all users' requests (filter ?user=&status=)\n    POST /api/wallet/topups/{id}/approve/\n    POST /api/wallet/topups/{id}/reject/","tags":["wallet"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TopupRequestList"}}}},"description":""}}},"post":{"operationId":"wallet_topups_create","description":"Top-up requests:\n- Player:\n    POST /api/wallet/topups/   -> create new top-up request (pending)\n    GET  /api/wallet/topups/   -> list own requests (pending/history)\n- Manager:\n    GET  /api/wallet/topups/   -> list all users' requests (filter ?user=&status=)\n    POST /api/wallet/topups/{id}/approve/\n    POST /api/wallet/topups/{id}/reject/","tags":["wallet"],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/TopupRequestCreate"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/TopupRequestCreate"}}},"required":true},"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TopupRequestCreate"}}},"description":""}}}},"/api/wallet/topups/{id}/":{"get":{"operationId":"wallet_topups_retrieve","description":"Top-up requests:\n- Player:\n    POST /api/wallet/topups/   -> create new top-up request (pending)\n    GET  /api/wallet/topups/   -> list own requests (pending/history)\n- Manager:\n    GET  /api/wallet/topups/   -> list all users' requests (filter ?user=&status=)\n    POST /api/wallet/topups/{id}/approve/\n    POST /api/wallet/topups/{id}/reject/","parameters":[{"in":"path","name":"id","schema":{"type":"string"},"required":true}],"tags":["wallet"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TopupRequestList"}}},"description":""}}},"put":{"operationId":"wallet_topups_update","description":"Top-up requests:\n- Player:\n    POST /api/wallet/topups/   -> create new top-up request (pending)\n    GET  /api/wallet/topups/   -> list own requests (pending/history)\n- Manager:\n    GET  /api/wallet/topups/   -> list all users' requests (filter ?user=&status=)\n    POST /api/wallet/topups/{id}/approve/\n    POST /api/wallet/topups/{id}/reject/","parameters":[{"in":"path","name":"id","schema":{"type":"string"},"required":true}],"tags":["wallet"],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/TopupRequestList"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/TopupRequestList"}}}},"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TopupRequestList"}}},"description":""}}},"patch":{"operationId":"wallet_topups_partial_update","description":"Top-up requests:\n- Player:\n    POST /api/wallet/topups/   -> create new top-up request (pending)\n    GET  /api/wallet/topups/   -> list own requests (pending/history)\n- Manager:\n    GET  /api/wallet/topups/   -> list all users' requests (filter ?user=&status=)\n    POST /api/wallet/topups/{id}/approve/\n    POST /api/wallet/topups/{id}/reject/","parameters":[{"in":"path","name":"id","schema":{"type":"string"},"required":true}],"tags":["wallet"],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/PatchedTopupRequestList"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/PatchedTopupRequestList"}}}},"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TopupRequestList"}}},"description":""}}},"delete":{"operationId":"wallet_topups_destroy","description":"Top-up requests:\n- Player:\n    POST /api/wallet/topups/   -> create new top-up request (pending)\n    GET  /api/wallet/topups/   -> list own requests (pending/history)\n- Manager:\n    GET  /api/wallet/topups/   -> list all users' requests (filter ?user=&status=)\n    POST /api/wallet/topups/{id}/approve/\n    POST /api/wallet/topups/{id}/reject/","parameters":[{"in":"path","name":"id","schema":{"type":"string"},"required":true}],"tags":["wallet"],"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"204":{"description":"No response body"}}}},"/api/wallet/topups/{id}/approve/":{"post":{"operationId":"wallet_topups_approve_create","description":"Manager approves the request:\n- Lock row (select_for_update) to avoid double approvals\n- Mark as 'approved'\n- Insert a positive CoinLedger 'topup' row with the coin amount\n- Return the updated TopupRequest plus ledger_id for UI refresh","parameters":[{"in":"path","name":"id","schema":{"type":"string"},"required":true}],"tags":["wallet"],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/TopupRequestList"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/TopupRequestList"}}}},"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TopupRequestList"}}},"description":""}}}},"/api/wallet/topups/{id}/reject/":{"post":{"operationId":"wallet_topups_reject_create","description":"Manager rejects the request:\n- Lock row (select_for_update)\n- Mark TopupRequest as 'rejected' (no ledger entry)\n- Return updated object for UI refresh","parameters":[{"in":"path","name":"id","schema":{"type":"string"},"required":true}],"tags":["wallet"],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/TopupRequestList"}},"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/TopupRequestList"}}}},"security":[{"cookieAuth":[]},{"jwtAuth":[]}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TopupRequestList"}}},"description":""}}}}},"components":{"schemas":{"Booking":{"type":"object","description":"Serializer for Booking.\n- Shows readable names (user, club, court) instead of numeric IDs.\n- Includes nested slot details under 'slots'.","properties":{"booking_no":{"type":"string","maxLength":24},"status":{"$ref":"#/components/schemas/BookingStatusEnum"},"user":{"type":"string","readOnly":true},"club_name":{"type":"string","readOnly":true},"court_name":{"type":"string","readOnly":true},"total_cost":{"type":"integer","maximum":2147483647,"minimum":0,"nullable":true},"booking_date":{"type":"string","format":"date","nullable":true},"created_at":{"type":"string","format":"date-time","readOnly":true},"slots":{"type":"string","readOnly":true}},"required":["booking_no","club_name","court_name","created_at","slots","user"]},"BookingStatusEnum":{"enum":["pending","confirmed","walkin","checkin","endgame","cancelled","completed","no_show"],"type":"string","description":"* `pending` - pending\n* `confirmed` - confirmed\n* `walkin` - walkin\n* `checkin` - checkin\n* `endgame` - endgame\n* `cancelled` - cancelled\n* `completed` - completed\n* `no_show` - no_show"},"CoinLedger":{"type":"object","description":"Transaction history rows for the table in the UI.","properties":{"id":{"type":"integer","readOnly":true},"type":{"$ref":"#/components/schemas/TypeEnum"},"amount":{"type":"integer","maximum":2147483647,"minimum":-2147483648,"description":"+ เข้า (topup/refund), - ออก (capture)"},"ref_booking":{"type":"integer","nullable":true},"created_at":{"type":"string","format":"date-time","readOnly":true}},"required":["amount","created_at","id","type"]},"CourtlyTokenObtainPair":{"type":"object","description":"Accepts either {\"username\",\"password\"} or {\"email\",\"password\"}.\nMakes 'username' optional so posting only email works.\nAlso updates last_login and returns { firstLogin, user }.","properties":{"username":{"type":"string","writeOnly":true},"password":{"type":"string","writeOnly":true},"email":{"type":"string","format":"email"}},"required":["password"]},"PatchedBooking":{"type":"object","description":"Serializer for Booking.\n- Shows readable names (user, club, court) instead of numeric IDs.\n- Includes nested slot details under 'slots'.","properties":{"booking_no":{"type":"string","maxLength":24},"status":{"$ref":"#/components/schemas/BookingStatusEnum"},"user":{"type":"string","readOnly":true},"club_name":{"type":"string","readOnly":true},"court_name":{"type":"string","readOnly":true},"total_cost":{"type":"integer","maximum":2147483647,"minimum":0,"nullable":true},"booking_date":{"type":"string","format":"date","nullable":true},"created_at":{"type":"string","format":"date-time","readOnly":true},"slots":{"type":"string","readOnly":true}}},"PatchedTopupRequestList":{"type":"object","description":"List/retrieve serializer shown to both players and manager.","properties":{"id":{"type":"integer","readOnly":true},"username":{"type":"string","readOnly":true},"amount_thb":{"type":"integer","readOnly":true},"coins":{"type":"integer","readOnly":true},"transfer_date":{"type":"string","format":"date","readOnly":true,"nullable":true},"transfer_time":{"type":"string","format":"time","readOnly":true,"nullable":true},"slip_path":{"type":"string","format":"uri","readOnly":true,"nullable":true},"status":{"allOf":[{"$ref":"#/components/schemas/StatusDe3Enum"}],"readOnly":true},"created_at":{"type":"string","format":"date-time","readOnly":true}}},"Register":{"type":"object","properties":{"username":{"type":"string","description":"Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.","pattern":"^[\\w.@+-]+$","maxLength":150},"email":{"type":"string","format":"email","maxLength":254},"firstname":{"type":"string"},"lastname":{"type":"string"},"password":{"type":"string","writeOnly":true,"minLength":8},"confirm":{"type":"string","writeOnly":true},"accept":{"type":"boolean","writeOnly":true}},"required":["accept","confirm","email","firstname","lastname","password","username"]},"Slot":{"type":"object","description":"Serializer for the Slot model.\n- Converts start_at and end_at to local time (HH:MM format).\n- Includes the related SlotStatus.","properties":{"id":{"type":"integer","readOnly":true},"court":{"type":"integer"},"service_date":{"type":"string","format":"date"},"start_time":{"type":"string","readOnly":true},"end_time":{"type":"string","readOnly":true},"price_coins":{"type":"integer","maximum":2147483647,"minimum":0},"slot_status":{"allOf":[{"$ref":"#/components/schemas/SlotStatus"}],"readOnly":true}},"required":["court","end_time","id","service_date","slot_status","start_time"]},"SlotStatus":{"type":"object","description":"Serializer for SlotStatus — shows current slot status and last update time.","properties":{"status":{"$ref":"#/components/schemas/SlotStatusStatusEnum"},"updated_at":{"type":"string","format":"date-time","readOnly":true}},"required":["updated_at"]},"SlotStatusStatusEnum":{"enum":["available","booked","walkin","checkin","endgame","expired","no_show","maintenance"],"type":"string","description":"* `available` - Available\n* `booked` - Booked\n* `walkin` - Walk-in\n* `checkin` - Check-in\n* `endgame` - Endgame\n* `expired` - Expired\n* `no_show` - No-Show\n* `maintenance` - Maintenance"},"StatusDe3Enum":{"enum":["pending","approved","rejected"],"type":"string","description":"* `pending` - Pending\n* `approved` - Approved\n* `rejected` - Rejected"},"TokenRefresh":{"type":"object","properties":{"access":{"type":"string","readOnly":true},"refresh":{"type":"string","writeOnly":true}},"required":["access","refresh"]},"TopupRequestCreate":{"type":"object","description":"Used when a user submits a top-up via UI.\n- Player provides amount_thb, transfer_date, transfer_time, and uploads slip_path (image).\n- Backend sets coins 1:1 with THB and status=pending.","properties":{"id":{"type":"integer","readOnly":true},"amount_thb":{"type":"integer","maximum":2147483647,"minimum":0},"coins":{"type":"integer","readOnly":true},"transfer_date":{"type":"string","format":"date","nullable":true},"transfer_time":{"type":"string","format":"time","nullable":true},"slip_path":{"type":"string","format":"uri","writeOnly":true},"status":{"allOf":[{"$ref":"#/components/schemas/StatusDe3Enum"}],"readOnly":true},"created_at":{"type":"string","format":"date-time","readOnly":true}},"required":["amount_thb","coins","created_at","id","slip_path","status"]},"TopupRequestList":{"type":"object","description":"List/retrieve serializer shown to both players and manager.","properties":{"id":{"type":"integer","readOnly":true},"username":{"type":"string","readOnly":true},"amount_thb":{"type":"integer","readOnly":true},"coins":{"type":"integer","readOnly":true},"transfer_date":{"type":"string","format":"date","readOnly":true,"nullable":true},"transfer_time":{"type":"string","format":"time","readOnly":true,"nullable":true},"slip_path":{"type":"string","format":"uri","readOnly":true,"nullable":true},"status":{"allOf":[{"$ref":"#/components/schemas/StatusDe3Enum"}],"readOnly":true},"created_at":{"type":"string","format":"date-time","readOnly":true}},"required":["amount_thb","coins","created_at","id","slip_path","status","transfer_date","transfer_time","username"]},"TypeEnum":{"enum":["topup","capture","refund"],"type":"string","description":"* `topup` - topup\n* `capture` - capture\n* `refund` - refund"}},"securitySchemes":{"cookieAuth":{"type":"apiKey","in":"cookie","name":"sessionid"},"jwtAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}}}