services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.postgres_on_cloud
    env_file: [.env]
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DJANGO_TIME_ZONE: ${DJANGO_TIME_ZONE}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_SSL_MODE: ${POSTGRES_SSL_MODE}
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/app
    restart: unless-stopped

  frontend:
    image: node:20-alpine
    working_dir: /app
    environment:
      NEXT_PUBLIC_API_BASE: "http://localhost:8000" # browser → backend
      INTERNAL_API_BASE: "http://localhost:8000" # Next.js (server) → backend
      WATCHPACK_POLLING: "true"
      CHOKIDAR_USEPOLLING: "true"
      NEXT_TELEMETRY_DISABLED: "1"
    command: sh -lc "npm install && npx next dev -p 3000 -H 0.0.0.0"
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:8
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_PROXY_X_HOST_COUNT: 1
      PGADMIN_CONFIG_PROXY_X_PREFIX_COUNT: 1
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  courtly_pgdata:
  frontend_node_modules:
  pgadmin_data:
